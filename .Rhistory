library(ggplot2)
library(fda)
library(abind)
current_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_folder)
setwd('../..')
initial_path <- 'data/initial_data/'
destination_path_with_rotation <- 'data/scores/with_rotation/'
destination_path_without_rotation <- 'data/scores/without_rotation/'
sufix <- "_P300_AV3_Raw Data.csv"
if (file.exists(destination_path_without_rotation) == FALSE){
dir.create('data/scores')
dir.create(destination_path_without_rotation)
}
if (file.exists(destination_path_with_rotation) == FALSE){
dir.create(destination_path_with_rotation)
}
files = list.files(path = initial_path, pattern="*.csv")
# Definición de la base de Fourier
freq <- create.fourier.basis(c(0, 300), nbasis=65, period=300)
harmaccelLfd <- vec2Lfd(c(0,(2*pi/300)^2,0), c(0, 300))
harmfdPar     <- fdPar(freq, harmaccelLfd, lambda=1e5)
for (i in 1:length(files)){
if((i-1)%%3 == 0){
name <- gsub(sufix,"",files[i])
# Se leen todos los ficheros correspondientes a cada sujeto
dir = paste(initial_path,files[i],sep = '')
df_av3 <- read.csv(dir, header = TRUE, sep=',')
df_av3 <- df_av3[-c(1)]
dir = paste(initial_path,files[i+1],sep = '')
df_av4 <- read.csv(dir, header = TRUE, sep=',')
df_av4 <- df_av4[-c(1)]
dir = paste(initial_path,files[i+2],sep = '')
df_av5 <- read.csv(dir, header = TRUE, sep=',')
df_av5 <- df_av5[-c(1)]
# Preparación de los datos para aplicar Fourier
matrix_av3 <- data.matrix(df_av3)
matrix_av4 <- data.matrix(df_av4)
matrix_av5 <- data.matrix(df_av5)
fdobj_df_av3 <- smooth.basis(1:300, matrix_av3,
freq, fdnames=list("ms", "frame", "wave"))$fd
fdobj_df_av4 <- smooth.basis(1:300, matrix_av4,
freq, fdnames=list("ms", "frame", "wave"))$fd
fdobj_df_av5 <- smooth.basis(1:300, matrix_av5,
freq, fdnames=list("ms", "frame", "wave"))$fd
# PCA sobre las transformadas
df.pcalist.v3 = pca.fd(fdobj_df_av3, 3)
df.pcalist.v4 = pca.fd(fdobj_df_av4, 3)
df.pcalist.v5 = pca.fd(fdobj_df_av5, 3)
# Se guardan todos los datos en un csv
df_versions = list(df.pcalist.v3, df.pcalist.v4, df.pcalist.v5)
version <- 1
for(df_v in df_versions){
Second_PCA <- df_v$scores[,2]
Third_PCA <- df_v$scores[,3]
scores_df <- data.frame(Second_PCA, Third_PCA)
path <- paste(destination_path_without_rotation,'score_',name,'_V',version,'.csv',sep = '')
version <- version +1
write.csv(scores_df,path, row.names = FALSE)
}
# Rotación
df_rot_av3 = varmx.pca.fd(df.pcalist.v3)
df_rot_av4 = varmx.pca.fd(df.pcalist.v4)
df_rot_av5 = varmx.pca.fd(df.pcalist.v5)
# Se guardan todos los datos rotados en un csv
df_rot_versions = list(df_rot_av3, df_rot_av4, df_rot_av5)
version <- 1
for(df_rot in df_rot_versions){
Second_PCA <- df_rot$scores[,2]
Third_PCA <- df_rot$scores[,3]
scores_df <- data.frame(Second_PCA, Third_PCA)
path <- paste(destination_path_with_rotation,name,'_V',version,'.csv',sep = '')
version <- version +1
write.csv(scores_df,path, row.names = FALSE)
}
}
}
library(ggplot2)
library(cluster)
library(factoextra)
current_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_folder)
setwd('../..')
rotation_initial_path <- 'data/scores/with_rotation/'
withoutrotation_initial_path <- 'data/scores/without_rotation/'
rotation_destination_path <- 'images/agnes/with_rotation/'
withoutrotation_destination_path <- 'images/agnes/without_rotation/'
if (file.exists(rotation_destination_path) == FALSE){
dir.create('images')
dir.create('images/agnes')
dir.create(rotation_destination_path)
}
if (file.exists(withoutrotation_destination_path) == FALSE){
dir.create(withoutrotation_destination_path)
}
reference <- read.csv('data/initial_data/Aurora_P300_AV3_Raw Data.csv', header = TRUE, sep=',')
reference <- reference[-c(1)]
paths <- list(c(rotation_initial_path, rotation_destination_path),
c(withoutrotation_initial_path, withoutrotation_destination_path))
for(path in paths){
initial_path <- path[1]
destination_path <- path[2]
print(initial_path)
files = list.files(path = initial_path, pattern="*.csv")
for (i in 1:length(files)){
dir <- paste(initial_path, files[i], sep='')
current_data <- read.csv(dir, header = TRUE, sep=',')
rownames(current_data) <- colnames(reference)
# Se calcula la distancia euclidea y se aplica agnes
distance <- dist(current_data,method = "euclidean")
hc_CL_Ward <- agnes(current_data, method = "ward")
gap_stat <- clusGap(current_data, FUN = hcut, nstart = 25, K.max = 15, B = 25)
hc_sg <- hclust(distance, method = "ward.D2" )
sub_grp <- cutree(hc_sg, k = 2)
name <- gsub("score_","",files[i])
name <- gsub(".csv","",name)
new_dir <- paste(destination_path,name,'.jpg',sep='')
# Se guardan las imagenes
jpeg(new_dir)
plot <- fviz_cluster(list(data = current_data, cluster = sub_grp), choose.vars = c("Second_PCA", "Third_PCA"), geom=c('point', 'text') )
print(plot)
dev.off()
}
}
library(ggplot2)
library(cluster)
library(factoextra)
current_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_folder)
setwd('../..')
rotation_initial_path <- 'data/scores/with_rotation/'
withoutrotation_initial_path <- 'data/scores/without_rotation/'
rotation_destination_path <- 'images/agnes/with_rotation/'
withoutrotation_destination_path <- 'images/agnes/without_rotation/'
if (file.exists(rotation_destination_path) == FALSE){
dir.create('images')
dir.create('images/agnes')
dir.create(rotation_destination_path)
}
if (file.exists(withoutrotation_destination_path) == FALSE){
dir.create(withoutrotation_destination_path)
}
reference <- read.csv('data/initial_data/Aurora_P300_AV3_Raw Data.csv', header = TRUE, sep=',')
reference <- reference[-c(1)]
paths <- list(c(rotation_initial_path, rotation_destination_path),
c(withoutrotation_initial_path, withoutrotation_destination_path))
for(path in paths){
initial_path <- path[1]
destination_path <- path[2]
print(initial_path)
files = list.files(path = initial_path, pattern="*.csv")
for (i in 1:length(files)){
dir <- paste(initial_path, files[i], sep='')
current_data <- read.csv(dir, header = TRUE, sep=',')
rownames(current_data) <- colnames(reference)
# Se calcula la distancia euclidea y se aplica agnes
distance <- dist(current_data,method = "euclidean")
hc_CL_Ward <- agnes(current_data, method = "ward")
gap_stat <- clusGap(current_data, FUN = hcut, nstart = 25, K.max = 15, B = 25)
hc_sg <- hclust(distance, method = "ward.D2" )
sub_grp <- cutree(hc_sg, k = 2)
name <- gsub("score_","",files[i])
name <- gsub(".csv","",name)
new_dir <- paste(destination_path,name,'.jpg',sep='')
# Se guardan las imagenes
jpeg(new_dir)
plot <- fviz_cluster(list(data = current_data, cluster = sub_grp), choose.vars = c("Second_PCA", "Third_PCA"), geom=c('point', 'text') )
print(plot)
dev.off()
}
}
library(ggplot2)
library(cluster)
library(factoextra)
current_folder <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_folder)
setwd('../..')
rotation_initial_path <- 'data/scores/with_rotation/'
withoutrotation_initial_path <- 'data/scores/without_rotation/'
rotation_destination_path <- 'images/kmeans/with_rotation/'
withoutrotation_destination_path <- 'images/kmeans/without_rotation/'
if (file.exists(rotation_destination_path) == FALSE){
dir.create('images')
dir.create('images/kmeans')
dir.create(rotation_destination_path)
}
if (file.exists(withoutrotation_destination_path) == FALSE){
dir.create(withoutrotation_destination_path)
}
if (file.exists('data/scores_cluster') == FALSE){
dir.create('data/scores_cluster')
dir.create('data/scores_cluster/with_rotation')
dir.create('data/scores_cluster/without_rotation')
}
reference <- read.csv('data/initial_data/Aurora_P300_AV3_Raw Data.csv', header = TRUE, sep=',')
reference <- reference[-c(1)]
paths <- list(c(rotation_initial_path, rotation_destination_path),
c(withoutrotation_initial_path, withoutrotation_destination_path))
z<-0
for(path in paths){
initial_path <- path[1]
destination_path <- path[2]
files = list.files(path = initial_path, pattern="*.csv")
for (i in 1:length(files)){
dir <- paste(initial_path, files[i], sep='')
current_data <- read.csv(dir, header = TRUE, sep=',')
rownames(current_data) <- colnames(reference)
# Se aplica kmeans con 2 centros
cluster.2<-kmeans(current_data,centers=2,nstart=20)
name <- gsub("score_","",files[i])
name <- gsub(".csv","",name)
new_dir <- paste(destination_path,name,'.jpg',sep='')
# Se guardan las imagenes
jpeg(new_dir)
plot <- fviz_cluster(cluster.2, data=current_data,
choose.vars = colnames(current_data))
print(plot)
dev.off()
sc_destination_path <- gsub("scores","scores_cluster",initial_path)
# Almacenamos los cluster en csv
if(z != 0){
z <- z+1
v <- array(c(v,cluster.2$cluster), dim=c(60,z))
}else{
z <- 1
v <- array(c(cluster.2$cluster), dim=c(60,1))
}
if(ncol(v) == 3){
z<-0
rownames(v) <- colnames(reference)
colnames(v) <- c('V3','V4','V5')
name <- gsub("_V3","",name)
new_dir <- paste(sc_destination_path,name,'.csv',sep='')
matrix.df <- as.data.frame(v)
write.csv(matrix.df,new_dir)
}
}
}
